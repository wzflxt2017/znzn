<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzefeng.dao.TestProblemsMapper" >
  <resultMap id="BaseResultMap" type="com.wangzefeng.pojo.TestProblems" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 04 14:35:00 CST 2019.
    -->
    <id column="test_problems_id" property="testProblemsId" jdbcType="VARCHAR" />
    <result column="test_content" property="testContent" jdbcType="VARCHAR" />
    <result column="test_type_id" property="testTypeId" jdbcType="VARCHAR" />
    <result column="test_answer" property="testAnswer" jdbcType="VARCHAR" />
    <result column="test_number" property="testNumber" jdbcType="INTEGER" />
    <result column="propositional_user_id" property="propositionalUserId" jdbcType="VARCHAR" />
    <result column="propositional_date" property="propositionalDate" jdbcType="TIMESTAMP" />
    <result column="degree_of_difficulty" property="degreeOfDifficulty" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    test_problems_id, test_content, test_type_id, test_answer, test_number, propositional_user_id, 
    propositional_date, degree_of_difficulty
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wangzefeng.example.TestProblemsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from test_problems
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from test_problems
    where test_problems_id = #{testProblemsId,jdbcType=VARCHAR}
  </select>
  <select id="selectByRand" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from test_problems
    ORDER BY RAND() LIMIT #{limit,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from test_problems
    where test_problems_id = #{testProblemsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.wangzefeng.example.TestProblemsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 04 14:35:00 CST 2019.
    -->
    delete from test_problems
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wangzefeng.pojo.TestProblems" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 04 14:35:00 CST 2019.
    -->
    <selectKey resultType="java.lang.String" keyProperty="testProblemsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_problems (test_content, test_type_id, test_answer, 
      test_number, propositional_user_id, propositional_date, 
      degree_of_difficulty)
    values (#{testContent,jdbcType=VARCHAR}, #{testTypeId,jdbcType=VARCHAR}, #{testAnswer,jdbcType=VARCHAR}, 
      #{testNumber,jdbcType=INTEGER}, #{propositionalUserId,jdbcType=VARCHAR}, #{propositionalDate,jdbcType=TIMESTAMP}, 
      #{degreeOfDifficulty,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wangzefeng.pojo.TestProblems" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 04 14:35:00 CST 2019.
    -->
    <selectKey resultType="java.lang.String" keyProperty="testProblemsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_problems
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="testContent != null" >
        test_content,
      </if>
      <if test="testTypeId != null" >
        test_type_id,
      </if>
      <if test="testAnswer != null" >
        test_answer,
      </if>
      <if test="testNumber != null" >
        test_number,
      </if>
      <if test="propositionalUserId != null" >
        propositional_user_id,
      </if>
      <if test="propositionalDate != null" >
        propositional_date,
      </if>
      <if test="degreeOfDifficulty != null" >
        degree_of_difficulty,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="testContent != null" >
        #{testContent,jdbcType=VARCHAR},
      </if>
      <if test="testTypeId != null" >
        #{testTypeId,jdbcType=VARCHAR},
      </if>
      <if test="testAnswer != null" >
        #{testAnswer,jdbcType=VARCHAR},
      </if>
      <if test="testNumber != null" >
        #{testNumber,jdbcType=INTEGER},
      </if>
      <if test="propositionalUserId != null" >
        #{propositionalUserId,jdbcType=VARCHAR},
      </if>
      <if test="propositionalDate != null" >
        #{propositionalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="degreeOfDifficulty != null" >
        #{degreeOfDifficulty,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wangzefeng.example.TestProblemsExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 04 14:35:00 CST 2019.
    -->
    select count(*) from test_problems
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 04 14:35:00 CST 2019.
    -->
    update test_problems
    <set >
      <if test="record.testProblemsId != null" >
        test_problems_id = #{record.testProblemsId,jdbcType=VARCHAR},
      </if>
      <if test="record.testContent != null" >
        test_content = #{record.testContent,jdbcType=VARCHAR},
      </if>
      <if test="record.testTypeId != null" >
        test_type_id = #{record.testTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.testAnswer != null" >
        test_answer = #{record.testAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.testNumber != null" >
        test_number = #{record.testNumber,jdbcType=INTEGER},
      </if>
      <if test="record.propositionalUserId != null" >
        propositional_user_id = #{record.propositionalUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.propositionalDate != null" >
        propositional_date = #{record.propositionalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.degreeOfDifficulty != null" >
        degree_of_difficulty = #{record.degreeOfDifficulty,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 04 14:35:00 CST 2019.
    -->
    update test_problems
    set test_problems_id = #{record.testProblemsId,jdbcType=VARCHAR},
      test_content = #{record.testContent,jdbcType=VARCHAR},
      test_type_id = #{record.testTypeId,jdbcType=VARCHAR},
      test_answer = #{record.testAnswer,jdbcType=VARCHAR},
      test_number = #{record.testNumber,jdbcType=INTEGER},
      propositional_user_id = #{record.propositionalUserId,jdbcType=VARCHAR},
      propositional_date = #{record.propositionalDate,jdbcType=TIMESTAMP},
      degree_of_difficulty = #{record.degreeOfDifficulty,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangzefeng.pojo.TestProblems" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 04 14:35:00 CST 2019.
    -->
    update test_problems
    <set >
      <if test="testContent != null" >
        test_content = #{testContent,jdbcType=VARCHAR},
      </if>
      <if test="testTypeId != null" >
        test_type_id = #{testTypeId,jdbcType=VARCHAR},
      </if>
      <if test="testAnswer != null" >
        test_answer = #{testAnswer,jdbcType=VARCHAR},
      </if>
      <if test="testNumber != null" >
        test_number = #{testNumber,jdbcType=INTEGER},
      </if>
      <if test="propositionalUserId != null" >
        propositional_user_id = #{propositionalUserId,jdbcType=VARCHAR},
      </if>
      <if test="propositionalDate != null" >
        propositional_date = #{propositionalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="degreeOfDifficulty != null" >
        degree_of_difficulty = #{degreeOfDifficulty,jdbcType=INTEGER},
      </if>
    </set>
    where test_problems_id = #{testProblemsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangzefeng.pojo.TestProblems" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 04 14:35:00 CST 2019.
    -->
    update test_problems
    set test_content = #{testContent,jdbcType=VARCHAR},
      test_type_id = #{testTypeId,jdbcType=VARCHAR},
      test_answer = #{testAnswer,jdbcType=VARCHAR},
      test_number = #{testNumber,jdbcType=INTEGER},
      propositional_user_id = #{propositionalUserId,jdbcType=VARCHAR},
      propositional_date = #{propositionalDate,jdbcType=TIMESTAMP},
      degree_of_difficulty = #{degreeOfDifficulty,jdbcType=INTEGER}
    where test_problems_id = #{testProblemsId,jdbcType=VARCHAR}
  </update>
</mapper>